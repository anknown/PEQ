#!/bin/bash
set -ue

function usage() {
	echo "Usage:"
	echo "    bash ./install --prefix=\$YOUR_PATH";
	exit 1
}

NGINX_INSTALL_STATE=/tmp/nginx.install.state
PHP_INSTALL_STATE=/tmp/php.install.state
YAF_INSTALL_STATE=/tmp/yaf.install.state
CURL_INSTALL_STATE=/tmp/curl.install.state

LOG=/tmp/install.log
WF_LOG=/tmp/install.log.wf

function init(){
	touch $LOG
	touch $WF_LOG
	cat /dev/null > $LOG
	cat /dev/null > $WF_LOG

    touch $NGINX_INSTALL_STATE
    touch $PHP_INSTALL_STATE
    touch $YAF_INSTALL_STATE
    touch $CURL_INSTALL_STATE
    echo '-' > $NGINX_INSTALL_STATE
    echo '-' > $PHP_INSTALL_STATE
    echo '-' > $YAF_INSTALL_STATE
    echo '-' > $CURL_INSTALL_STATE
}

function install_nginx(){
	{
		_DIR=/tmp/nginx
	
		pushd $PWD >/dev/null
		cd package 2>>$WF_LOG
	
		_TAR=$(ls nginx*.tar.gz 2>>$WF_LOG);
		mkdir -p $_DIR 2>>$WF_LOG && tar zxf $_TAR -C $_DIR 2>>$WF_LOG
	
		_DIR=$_DIR/$(ls $_DIR);
		cd $_DIR 2>>$WF_LOG
		./configure --prefix=${PREFIX}/webserver 1>>$LOG 2>>$WF_LOG
		
		make -j 1>>$LOG 2>>$WF_LOG && make install 1>>$LOG 2>>$WF_LOG
	
		popd >/dev/null
		cp tpl/nginx.conf ${PREFIX}/webserver/conf
		cp tpl/nginx_control ${PREFIX}/webserver
		cp tpl/fastcgi.conf ${PREFIX}/webserver/conf
		cp tpl/fastcgi_params ${PREFIX}/webserver/conf

		if [ $(uname) == 'Darwin' ]; then
			sed -i "" "s|\${PEQ_ROOT}|${PREFIX}|g" $PREFIX/webserver/conf/nginx.conf 1>>$LOG 2>>$WF_LOG
			sed -i "" "s|\${PEQ_ROOT}|${PREFIX}|g" $PREFIX/webserver/nginx_control 1>>$LOG 2>>$WF_LOG
		else
			sed -i "s|\${PEQ_ROOT}|${PREFIX}|g" $PREFIX/webserver/conf/nginx.conf 1>>$LOG 2>>$WF_LOG
			sed -i "s|\${PEQ_ROOT}|${PREFIX}|g" $PREFIX/webserver/nginx_control 1>>$LOG 2>>$WF_LOG
		fi

		echo $? > $NGINX_INSTALL_STATE
	}&
	
	NGINX_IS_DONE="0"
	while :
	do
		for j in '-' '\\' '|' '/'; do
			tput sc
			echo -ne  "Installing Nginx, Please wait....... $j"
			sleep 0.1
			tput rc
			
			if [ -s "$WF_LOG" ]; then
				echo "Sth wrong, Please check $LOG and $WF_LOG"
                echo '-' > $NGINX_INSTALL_STATE
				NGINX_IS_DONE="2"
				break
			fi
			if [ -f "$NGINX_INSTALL_STATE" ] && [ $(cat $NGINX_INSTALL_STATE) != '-' ]; then
				echo "Install Nginx Done                          "
                echo '-' > $NGINX_INSTALL_STATE
				NGINX_IS_DONE="1"
				break
			fi
		done
		if [ "$NGINX_IS_DONE" = "1" ] || [ "$NGINX_IS_DONE" = "2" ]; then
			break
		fi
	done
}

function install_php(){
	{
		_DIR=/tmp/php

		pushd $PWD >/dev/null
		cd package 2>>$WF_LOG

		_TAR=$(ls php*.tar.gz 2>>$WF_LOG);
		mkdir -p $_DIR 2>>$WF_LOG && tar zxf $_TAR -C $_DIR 2>>$WF_LOG

		_DIR=$_DIR/$(ls $_DIR);
		cd $_DIR 2>>$WF_LOG

		if [ $(uname) == 'Darwin' ]; then
			./configure --prefix=${PREFIX}/php --without-iconv --with-mysqli --with-mysql --with-pdo-mysql --with-config-file-scan-dir=${PREFIX}/php/etc/ext --with-config-file-path=${PREFIX}/php/etc  --enable-fpm --disable-phar CFLAGS="-Wno-logical-op-parentheses -Wno-return-type -Wno-macro-redefined -Wno-enum-conversion -Wno-logical-not-parentheses -Wno-tautological-compare -Wno-string-plus-int -Wno-gnu-statement-expression -Wno-absolute-value -Wno-format -Wno-pointer-bool-conversion -Wno-incompatible-pointer-types-discards-qualifiers -Wno-format-extra-args -Wno-format-invalid-specifier -Wno-deprecated-declarations -Wno-pointer-sign -Wno-empty-body" 1>>$LOG 2>>$WF_LOG
		else
			./configure --prefix=${PREFIX}/php --with-mysqli --with-mysql --with-pdo-mysql --with-config-file-scan-dir=${PREFIX}/php/etc/ext --with-config-file-path=${PREFIX}/php/etc  --enable-fpm --disable-phar 1>>$LOG 2>>$WF_LOG
		
		fi

		make -j 1>>$LOG 2>>$WF_LOG
		make install 1>>$LOG 2>>$WF_LOG
		popd >/dev/null

		mv ${PREFIX}/php/etc/php-fpm.conf.default ${PREFIX}/php/etc/php-fpm.conf

		cp tpl/php.ini $PREFIX/php/etc 
		cp tpl/php-fpm_control ${PREFIX}/php 
		cp tpl/php-fpm.conf ${PREFIX}/php/etc 

		if [ $(uname) == 'Darwin' ]; then
			sed -i "" "s|\${PEQ_ROOT}|${PREFIX}|g" $PREFIX/php/etc/php.ini 1>>$LOG 2>>$WF_LOG
			sed -i "" "s|\${PEQ_ROOT}|${PREFIX}|g" ${PREFIX}/php/php-fpm_control 1>>$LOG 2>>$WF_LOG
			sed -i "" "s|\${PEQ_ROOT}|${PREFIX}|g" ${PREFIX}/php/etc/php-fpm.conf 1>>$LOG 2>>$WF_LOG
		else
			sed -i "s|\${PEQ_ROOT}|${PREFIX}|g" $PREFIX/php/etc/php.ini 1>>$LOG 2>>$WF_LOG
			sed -i "s|\${PEQ_ROOT}|${PREFIX}|g" ${PREFIX}/php/php-fpm_control 1>>$LOG 2>>$WF_LOG
			sed -i "s|\${PEQ_ROOT}|${PREFIX}|g" ${PREFIX}/php/etc/php-fpm.conf 1>>$LOG 2>>$WF_LOG
		fi

		echo $? > $PHP_INSTALL_STATE
	}&

	PHP_IS_DONE="0"
	while :
	do
		for j in '-' '\\' '|' '/'; do
			tput sc
			echo -ne  "Installing PHP, Please wait....... $j"
			sleep 0.1
			tput rc
			
			if [ -s "$WF_LOG" ]; then
				echo "Sth wrong, Please check $LOG and $WF_LOG"
                echo '-' > $PHP_INSTALL_STATE
				PHP_IS_DONE="2"
				break
			fi
			if [ -f "$PHP_INSTALL_STATE" ] && [ $(cat $PHP_INSTALL_STATE) != '-' ]; then
				echo "Install PHP Done                          "
                echo '-' > $PHP_INSTALL_STATE
				PHP_IS_DONE="1"
				break
			fi
		done
		if [ "$PHP_IS_DONE" = "1" ] || [ "$PHP_IS_DONE" = "2" ]; then
		    break
		fi
	done
}

function install_yaf(){
	{
		sleep 3

		_DIR=/tmp/yaf

		pushd $PWD >/dev/null
		cd package 2>>$WF_LOG

		_TAR=$(ls yaf*.tar.gz 2>>$WF_LOG);
		mkdir -p $_DIR 2>>$WF_LOG && tar zxf $_TAR -C $_DIR 2>>$WF_LOG

		_DIR=$_DIR/$(ls $_DIR | grep yaf)
		cd $_DIR 2>>$WF_LOG
		${PREFIX}/php/bin/phpize  1>>$LOG 2>>$WF_LOG
		./configure --with-php-config=${PREFIX}/php/bin/php-config  1>>$LOG 2>>$WF_LOG
		
		make -j 1>>$LOG 2>>$WF_LOG && make install 1>>$LOG 2>>$WF_LOG

		popd >/dev/null

		cp tpl/yaf.ini $PREFIX/php/etc/ext

		if [ $(uname) == 'Darwin' ]; then
			sed -i "" "s|\${PEQ_ROOT}|${PREFIX}|g" $PREFIX/php/etc/ext/yaf.ini 1>>$LOG 2>>$WF_LOG
		else
			sed -i "s|\${PEQ_ROOT}|${PREFIX}|g" $PREFIX/php/etc/ext/yaf.ini 1>>$LOG 2>>$WF_LOG
		fi

		echo $? > $YAF_INSTALL_STATE
	}&

	YAF_IS_DONE="0"
	while :
	do
		for j in '-' '\\' '|' '/'; do
			tput sc
			echo -ne  "Installing Yaf, Please wait....... $j"
			sleep 0.1
			tput rc
			
			if [ -s "$WF_LOG" ]; then
				echo "Sth wrong, Please check $LOG and $WF_LOG"
                echo '-' > $YAF_INSTALL_STATE
				YAF_IS_DONE="2"
				break
			fi
			if [ -f "$YAF_INSTALL_STATE" ] && [ $(cat $YAF_INSTALL_STATE) != '-' ]; then
				echo "Install yaf Done                          "
                echo '-' > $YAF_INSTALL_STATE
				YAF_IS_DONE="1"
				break
			fi
		done
		if [ "$YAF_IS_DONE" = "1" ] || [ "$YAF_IS_DONE" = "2" ]; then
			break
		fi
	done
}

function install_curl(){
	{
		sleep 3

		pushd $PWD >/dev/null
		cd /tmp/php/php* 2>>$WF_LOG

		cd ext/curl 2>>$WF_LOG
		${PREFIX}/php/bin/phpize  1>>$LOG 2>>$WF_LOG
		if [ $(uname) == 'Darwin' ]; then
			./configure --with-php-config=${PREFIX}/php/bin/php-config  CFLAGS="-Wno-enum-conversion" 1>>$LOG 2>>$WF_LOG
		else
			./configure --with-php-config=${PREFIX}/php/bin/php-config 1>>$LOG 2>>$WF_LOG
		fi
		
		make -j 1>>$LOG 2>>$WF_LOG && make install 1>>$LOG 2>>$WF_LOG

		popd >/dev/null

		cp tpl/curl.ini $PREFIX/php/etc/ext

		echo $? > $CURL_INSTALL_STATE
	}&

	CURL_IS_DONE="0"
	while :
	do
		for j in '-' '\\' '|' '/'; do
			tput sc
			echo -ne  "Installing cURL, Please wait....... $j"
		    sleep 0.1
		    tput rc
		    
			if [ -s "$WF_LOG" ]; then
				echo "Sth wrong, Please check $LOG and $WF_LOG"
                echo '-' > $CURL_INSTALL_STATE
				CURL_IS_DONE="2"
				break
			fi
			if [ -f "$CURL_INSTALL_STATE" ] && [ $(cat $CURL_INSTALL_STATE) != '-' ]; then
				echo "Install cURL Done                          "
                echo '-' > $CURL_INSTALL_STATE
				CURL_IS_DONE="1"
				break
			fi
		done
		if [ "$CURL_IS_DONE" = "1" ] || [ "$CURL_IS_DONE" = "2" ]; then
			break
		fi
	done
}

function install_logrotate(){
    cp $PWD/logrotate/bin/logrotate ${PREFIX}/bin 2>>$WF_LOG
    cp $PWD/logrotate/conf/logrotate.conf ${PREFIX}/conf/logrotate 2>>$WF_LOG
    
    if [ $(uname) == 'Darwin' ]; then
    	sed -i "" "s|\${PEQ_ROOT}|${PREFIX}|g" ${PREFIX}/conf/logrotate/logrotate.conf 2>>$WF_LOG
    	sed -i "" "s|\${PEQ_ROOT}|${PREFIX}|g" ${PREFIX}/bin/logrotate 2>>$WF_LOG
    else
    	sed -i "s|\${PEQ_ROOT}|${PREFIX}|g" ${PREFIX}/conf/logrotate/logrotate.conf 2>>$WF_LOG
    	sed -i "s|\${PEQ_ROOT}|${PREFIX}|g" ${PREFIX}/bin/logrotate 2>>$WF_LOG
    fi
    
    echo "Install LogRotate Done, Please add to crontabe: \"# 1 * * * * cd ${PREFIX}/bin && bash logrotate -f\""
}

function install_demo(){
	cp -r $PWD/demo/app/* ${PREFIX}/app
	mkdir -p ${PREFIX}/conf/app && cp -r $PWD/demo/conf/app/* ${PREFIX}/conf/app 

	if [ $(uname) == 'Darwin' ]; then
		sed -i "" "s|\${PEQ_ROOT}|${PREFIX}|g" ${PREFIX}/conf/app/helloworld/yaf.ini 2>>$WF_LOG
	else
		sed -i "s|\${PEQ_ROOT}|${PREFIX}|g" ${PREFIX}/conf/app/helloworld/yaf.ini 2>>$WF_LOG
	fi
	cp -r $PWD/demo/webroot/* ${PREFIX}/webroot
      
	echo "Install Demo Done"
}

PREFIX=""

for arg in "$@"
do
	CMD=$(echo $arg | cut -d = -f 1)
	if [ $CMD != "--prefix" ]; then
		echo "unknown opt $CMD"
	else
		PREFIX=$(echo $arg | cut -d = -f 2)
	fi
	
done

if [ ${PREFIX}x == x ]; then
	usage
elif [ ${PREFIX} == "--prefix" ]; then
	echo "Please assign install prefix path!"
fi


mkdir -p ${PREFIX}
mkdir -p ${PREFIX}/app
mkdir -p ${PREFIX}/conf
mkdir -p ${PREFIX}/conf/logrotate
mkdir -p ${PREFIX}/data
mkdir -p ${PREFIX}/data/logrotate
mkdir -p ${PREFIX}/log
mkdir -p ${PREFIX}/log/webserver
mkdir -p ${PREFIX}/log/php
mkdir -p ${PREFIX}/log/logrotate
mkdir -p ${PREFIX}/php
mkdir -p ${PREFIX}/php/etc/ext
cp -r ./phplib ${PREFIX}/php/
mkdir -p ${PREFIX}/webroot
mkdir -p ${PREFIX}/webserver
mkdir -p ${PREFIX}/var
mkdir -p ${PREFIX}/var/nginx
mkdir -p ${PREFIX}/var/php
mkdir -p ${PREFIX}/bin

init

#if [ ! -s "$WF_LOG" ]; then
#    install_nginx
#fi
#if [ ! -s "$WF_LOG" ]; then
#    install_php
#fi
#if [ ! -s "$WF_LOG" ]; then
#    install_yaf
#fi
#if [ ! -s "$WF_LOG" ]; then
#    install_curl
#fi
if [ ! -s "$WF_LOG" ]; then
    install_logrotate
fi
if [ ! -s "$WF_LOG" ]; then
    install_demo
fi

if [ ! -s "$WF_LOG" ]; then
    echo "=====> Install PEQ Done"
fi
